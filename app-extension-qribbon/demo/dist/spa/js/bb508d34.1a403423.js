(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["bb508d34"],{"0960":function(t,e,o){"use strict";o.r(e);var r=function(){var t=this,e=t.$createElement,o=t._self._c||e;return o("q-page",{staticClass:"row justify-center"},[o("q-card",{staticClass:"q-my-lg q-pa-md flat bordered",staticStyle:{height:"90px",width:"75%"}},[o("q-select",{attrs:{options:[{value:"all",label:"All Examples"},{value:"horizontal",label:"Horizontal (Default)"},{value:"vertical",label:"Vertical"},{value:"corner",label:"Corner"}],label:"Display Examples",filled:"",multiple:"","use-chips":"","stack-label":"","emit-value":""},model:{value:t.exampleTypes,callback:function(e){t.exampleTypes=e},expression:"exampleTypes"}})],1),o("q-card",{directives:[{name:"show",rawName:"v-show",value:t.exampleTypeHas("horizontal"),expression:"exampleTypeHas('horizontal')"}],staticClass:"q-my-lg q-py-md flat bordered",staticStyle:{width:"75%"}},[o("div",{staticClass:"ribbon-wrapper"},[o("q-ribbon",{staticClass:"border-radius",attrs:{color:"#616161","background-color":"#e0e0e0"}},[t._v('QRibbon (type="horizontal")')])],1),o("q-separator",{staticClass:"q-mb-lg"}),o("div",{staticClass:"box-ribbon-wrapper q-py-md"},[o("div",{staticClass:"ribbon-wrapper"},[o("q-ribbon",{attrs:{"leaf-position":"top"}},[t._v("Left Ribbon (default)")])],1),o("div",{staticClass:"ribbon-wrapper"},[o("q-ribbon",{staticClass:"border-radius"},[t._v("With border radius")])],1),o("div",{staticClass:"ribbon-wrapper"},[o("q-ribbon",{attrs:{color:"red","background-color":"yellow"}},[t._v("Hippy Ribbon")])],1),o("div",{staticClass:"ribbon-wrapper"},[o("q-ribbon",{attrs:{color:"white","background-color":"#FF0000"}},[t._v("Auto shade the leaf by passing CSS color (e.g. #FF0000)")])],1),o("div",{staticClass:"ribbon-wrapper"},[o("q-ribbon",[o("q-icon",{attrs:{name:"home"}})],1)],1),o("div",{staticClass:"ribbon-wrapper"},[o("q-ribbon",[t._v("Inline Left Ribbon")]),o("q-ribbon",{attrs:{position:"right","leaf-position":"top"}},[t._v("Inline Right Ribbon")])],1),o("div",{staticClass:"ribbon-wrapper"},[o("q-ribbon",{attrs:{position:"right"}},[t._v("Right Ribbon")])],1),o("div",{staticClass:"ribbon-wrapper avatar"},[o("q-ribbon",{attrs:{position:"right"}},[o("q-avatar",[o("img",{attrs:{src:"https://cdn.quasar.dev/img/avatar.png"}})])],1)],1),o("div",{staticClass:"ribbon-wrapper"},[o("q-ribbon",{attrs:{color:"purple","leaf-color":"purple","background-color":"orange",position:"right"}},[t._v("Hippy Ribbon")])],1),o("div",{staticClass:"ribbon-wrapper"},[o("q-ribbon",{attrs:{color:"yellow","leaf-color":"blue","background-color":"green",position:"right"}},[t._v("Different Leaf Color - Hippy Ribbon")])],1),o("div",{staticClass:"ribbon-wrapper"},[o("q-ribbon",{staticClass:"text-center",attrs:{size:"full"}},[t._v("Full Ribbon (.text-center)")])],1),o("div",{staticClass:"ribbon-wrapper"},[o("q-ribbon",{attrs:{size:"full"}},[o("marquee",[t._v("Let's Marquee!")])],1)],1),o("div",{staticClass:"ribbon-wrapper"},[o("q-ribbon",{staticClass:"text-right q-mt-md",attrs:{"leaf-position":"top",size:"full","leaf-color":"green",color:"green","background-color":"yellow"}},[t._v("Full Inverted Hippy Ribbon (.text-right)")])],1)])],1),o("q-card",{directives:[{name:"show",rawName:"v-show",value:t.exampleTypeHas("vertical"),expression:"exampleTypeHas('vertical')"}],staticClass:"q-my-lg q-py-md flat bordered",staticStyle:{width:"75%"}},[o("div",{staticClass:"ribbon-wrapper"},[o("q-ribbon",{staticClass:"border-radius",attrs:{color:"#616161","background-color":"#e0e0e0"}},[t._v('QRibbon (type="vertical")')])],1),o("q-separator",{staticClass:"q-mb-lg"}),o("div",{staticClass:"box-ribbon-wrapper q-py-md"},[o("div",{staticClass:"ribbon-wrapper"},[o("q-ribbon",{attrs:{type:"vertical",position:"top-left","leaf-position":"right"}},[t._v("Top Down Ribbon")])],1),o("div",{staticClass:"ribbon-wrapper"},[o("q-ribbon",{attrs:{type:"vertical",position:"bottom-left","leaf-position":"left"}},[t._v("Bottom Up Ribbon")])],1),o("div",{staticClass:"ribbon-wrapper"},[o("q-ribbon",{staticClass:"text-center",attrs:{type:"vertical",position:"right",size:"full","leaf-position":"left"}},[t._v("Full Ribbon (.text-center)")])],1)])],1),o("q-card",{directives:[{name:"show",rawName:"v-show",value:t.exampleTypeHas("corner"),expression:"exampleTypeHas('corner')"}],staticClass:"q-my-lg q-pt-md flat bordered",staticStyle:{width:"75%"}},[o("div",{staticClass:"ribbon-wrapper"},[o("q-ribbon",{staticClass:"border-radius",attrs:{color:"#616161","background-color":"#e0e0e0"}},[t._v('QRibbon (type="corner")')])],1),o("q-separator"),o("q-card-section",[o("div",{staticClass:"box-ribbon-wrapper"},[o("q-ribbon",{attrs:{position:"top-left",type:"corner"}},[t._v("Top Left")]),o("q-ribbon",{staticClass:"github-text",attrs:{position:"top-right",type:"corner",color:"white","background-color":"#5b5e63"}},[o("a",{attrs:{href:"#"}},[t._v("FORK ME ON GITHUB!")])]),o("q-ribbon",{staticClass:"qribbon-bottom",attrs:{position:"bottom-left",type:"corner"}},[o("span",{staticClass:"rotate-270"},[t._v("Bottom Left")])]),o("q-ribbon",{staticClass:"qribbon-bottom",attrs:{position:"bottom-right",type:"corner"}},[t._v("Bottom Right")])],1)])],1)],1)},a=[],i=(o("6762"),o("2fdb"),o("cff9")),n={name:"PageIndex",methods:{exampleTypeHas:function(t){return this.exampleTypes.includes(t)||this.exampleTypes.includes("all")}},data:function(){return{template:i["a"],exampleTypes:["all"]}}},s=n,l=(o("460c"),o("2877")),b=Object(l["a"])(s,r,a,!1,null,null,null);e["default"]=b.exports},"460c":function(t,e,o){"use strict";var r=o("67b9"),a=o.n(r);a.a},"67b9":function(t,e,o){},cff9:function(t,e,o){"use strict";e["a"]="QRibbon\n===\n\n> Please note, this is currently a work-in-progress (WIP).\n\nQRibbon is a [Quasar App Extension](https://quasar.dev/app-extensions/introduction). It allows you to display ribbons on your page.\n\n# Install\nTo add this App Extension to your Quasar application, run the following (in your Quasar app folder):\n```\nquasar ext add qribbon\n```\n\n# Uninstall\nTo remove this App Extension from your Quasar application, run the following (in your Quasar app folder):\n```\nquasar ext remove qribbon\n```\n\n# Describe\nYou can use `quasar describe QRibbon` (to be implemented before QRibbon v1 release)\n\n# Source\nCan be found [here](https://github.com/webnoob/app-extension-qribbon/).\n\n# Docs\nCan be found [here](https://webnoob.github.io/app-extension-qribbon/demo/dist/spa/#/).\n\n# Examples\nCan be found [here](https://webnoob.github.io/app-extension-qribbon/demo/dist/spa/#/examples).\n\n# Interactive Demo / QRibbon Builder\nCan be found [here](https://webnoob.github.io/app-extension-qribbon/demo/dist/spa/#/builder).\n\n# Demo (source) Project\nCan be found [here](https://github.com/webnoob/app-extension-qribbon/tree/master/demo).\n\n# QRibbon API\n\n## Vue Properties\n\n| Vue Property | Type | Description |\n| --- | --- | --- |\n| type | String | Defaults to `horizontal`. Acceptable options are `horizontal`, `corner`, `vertical` |\n| position | String | Acceptable strings are: <br/> Type==`horizontal`: `left`, `right`, `full`<br/> Type==`corner`or`vertical`: `top left`, `top right`, `bottom left`, `bottom right` |\n| color | Array | CSS Color for the text |\n| background-color | String | CSS Color for the background |\n| leaf-color | Boolean | CSS Color for the leaf |\n| leaf-position | String | Acceptable strings are: <br/> Type==`horizontal`: `top`, `bottom`<br/> Type==`vertical`: `left`, `right` |\n| size | String | Acceptable options are `full` to fill the container or empty for default. |\n\n## Vue Slots\n| Slot Name | Description |\n| --- | --- |\n| default | Any content can be entered into the default slot and it will show in the ribbon. |\n\n---\nThis page created with [QMarkdown](https://quasarframework.github.io/app-extension-qmarkdown), another great Quasar App Extension.\n"}}]);